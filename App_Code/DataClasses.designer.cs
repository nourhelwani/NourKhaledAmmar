#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="3alyamen")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertACCOUNT_TYPE(ACCOUNT_TYPE instance);
  partial void UpdateACCOUNT_TYPE(ACCOUNT_TYPE instance);
  partial void DeleteACCOUNT_TYPE(ACCOUNT_TYPE instance);
  partial void InsertUSER(USER instance);
  partial void UpdateUSER(USER instance);
  partial void DeleteUSER(USER instance);
  partial void InsertADVERTISMENT_TYPE(ADVERTISMENT_TYPE instance);
  partial void UpdateADVERTISMENT_TYPE(ADVERTISMENT_TYPE instance);
  partial void DeleteADVERTISMENT_TYPE(ADVERTISMENT_TYPE instance);
  partial void InsertADVERTISMENT(ADVERTISMENT instance);
  partial void UpdateADVERTISMENT(ADVERTISMENT instance);
  partial void DeleteADVERTISMENT(ADVERTISMENT instance);
  partial void InsertAREA_COORINATE(AREA_COORINATE instance);
  partial void UpdateAREA_COORINATE(AREA_COORINATE instance);
  partial void DeleteAREA_COORINATE(AREA_COORINATE instance);
  partial void InsertCATEGORy(CATEGORy instance);
  partial void UpdateCATEGORy(CATEGORy instance);
  partial void DeleteCATEGORy(CATEGORy instance);
  partial void InsertGENER(GENER instance);
  partial void UpdateGENER(GENER instance);
  partial void DeleteGENER(GENER instance);
  partial void InsertMARKER(MARKER instance);
  partial void UpdateMARKER(MARKER instance);
  partial void DeleteMARKER(MARKER instance);
  partial void InsertMARKERS_CATEGORy(MARKERS_CATEGORy instance);
  partial void UpdateMARKERS_CATEGORy(MARKERS_CATEGORy instance);
  partial void DeleteMARKERS_CATEGORy(MARKERS_CATEGORy instance);
  partial void InsertPAGE(PAGE instance);
  partial void UpdatePAGE(PAGE instance);
  partial void DeletePAGE(PAGE instance);
  partial void InsertPHONE(PHONE instance);
  partial void UpdatePHONE(PHONE instance);
  partial void DeletePHONE(PHONE instance);
  partial void InsertQUESTION(QUESTION instance);
  partial void UpdateQUESTION(QUESTION instance);
  partial void DeleteQUESTION(QUESTION instance);
  partial void InsertREVIEW(REVIEW instance);
  partial void UpdateREVIEW(REVIEW instance);
  partial void DeleteREVIEW(REVIEW instance);
  partial void InsertROLE(ROLE instance);
  partial void UpdateROLE(ROLE instance);
  partial void DeleteROLE(ROLE instance);
  partial void InsertROLES_PAGE(ROLES_PAGE instance);
  partial void UpdateROLES_PAGE(ROLES_PAGE instance);
  partial void DeleteROLES_PAGE(ROLES_PAGE instance);
  #endregion
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<ACCOUNT_TYPE> ACCOUNT_TYPEs
	{
		get
		{
			return this.GetTable<ACCOUNT_TYPE>();
		}
	}
	
	public System.Data.Linq.Table<USER> USERs
	{
		get
		{
			return this.GetTable<USER>();
		}
	}
	
	public System.Data.Linq.Table<ADVERTISMENT_TYPE> ADVERTISMENT_TYPEs
	{
		get
		{
			return this.GetTable<ADVERTISMENT_TYPE>();
		}
	}
	
	public System.Data.Linq.Table<ADVERTISMENT> ADVERTISMENTs
	{
		get
		{
			return this.GetTable<ADVERTISMENT>();
		}
	}
	
	public System.Data.Linq.Table<AREA_COORINATE> AREA_COORINATEs
	{
		get
		{
			return this.GetTable<AREA_COORINATE>();
		}
	}
	
	public System.Data.Linq.Table<CATEGORy> CATEGORies
	{
		get
		{
			return this.GetTable<CATEGORy>();
		}
	}
	
	public System.Data.Linq.Table<GENER> GENERs
	{
		get
		{
			return this.GetTable<GENER>();
		}
	}
	
	public System.Data.Linq.Table<MARKER> MARKERs
	{
		get
		{
			return this.GetTable<MARKER>();
		}
	}
	
	public System.Data.Linq.Table<MARKERS_CATEGORy> MARKERS_CATEGORies
	{
		get
		{
			return this.GetTable<MARKERS_CATEGORy>();
		}
	}
	
	public System.Data.Linq.Table<PAGE> PAGEs
	{
		get
		{
			return this.GetTable<PAGE>();
		}
	}
	
	public System.Data.Linq.Table<PHONE> PHONEs
	{
		get
		{
			return this.GetTable<PHONE>();
		}
	}
	
	public System.Data.Linq.Table<QUESTION> QUESTIONs
	{
		get
		{
			return this.GetTable<QUESTION>();
		}
	}
	
	public System.Data.Linq.Table<REVIEW> REVIEWs
	{
		get
		{
			return this.GetTable<REVIEW>();
		}
	}
	
	public System.Data.Linq.Table<ROLE> ROLEs
	{
		get
		{
			return this.GetTable<ROLE>();
		}
	}
	
	public System.Data.Linq.Table<ROLES_PAGE> ROLES_PAGEs
	{
		get
		{
			return this.GetTable<ROLES_PAGE>();
		}
	}
	
	public System.Data.Linq.Table<ENABLED_ADVERTISMENT> ENABLED_ADVERTISMENTs
	{
		get
		{
			return this.GetTable<ENABLED_ADVERTISMENT>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACCOUNT_TYPES")]
public partial class ACCOUNT_TYPE : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ACCOUNT_TYPE_ID;
	
	private string _DESCRIPTION;
	
	private EntitySet<USER> _USERs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnACCOUNT_TYPE_IDChanging(int value);
    partial void OnACCOUNT_TYPE_IDChanged();
    partial void OnDESCRIPTIONChanging(string value);
    partial void OnDESCRIPTIONChanged();
    #endregion
	
	public ACCOUNT_TYPE()
	{
		this._USERs = new EntitySet<USER>(new Action<USER>(this.attach_USERs), new Action<USER>(this.detach_USERs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACCOUNT_TYPE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ACCOUNT_TYPE_ID
	{
		get
		{
			return this._ACCOUNT_TYPE_ID;
		}
		set
		{
			if ((this._ACCOUNT_TYPE_ID != value))
			{
				this.OnACCOUNT_TYPE_IDChanging(value);
				this.SendPropertyChanging();
				this._ACCOUNT_TYPE_ID = value;
				this.SendPropertyChanged("ACCOUNT_TYPE_ID");
				this.OnACCOUNT_TYPE_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPTION", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
	public string DESCRIPTION
	{
		get
		{
			return this._DESCRIPTION;
		}
		set
		{
			if ((this._DESCRIPTION != value))
			{
				this.OnDESCRIPTIONChanging(value);
				this.SendPropertyChanging();
				this._DESCRIPTION = value;
				this.SendPropertyChanged("DESCRIPTION");
				this.OnDESCRIPTIONChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACCOUNT_TYPE_USER", Storage="_USERs", ThisKey="ACCOUNT_TYPE_ID", OtherKey="ACCOUNT_TYPE_ID")]
	public EntitySet<USER> USERs
	{
		get
		{
			return this._USERs;
		}
		set
		{
			this._USERs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_USERs(USER entity)
	{
		this.SendPropertyChanging();
		entity.ACCOUNT_TYPE = this;
	}
	
	private void detach_USERs(USER entity)
	{
		this.SendPropertyChanging();
		entity.ACCOUNT_TYPE = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.USERS")]
public partial class USER : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _USER_ID;
	
	private int _ROLE_ID;
	
	private string _FIRST_NAME;
	
	private string _LAST_NAME;
	
	private string _USERNAME;
	
	private string _EMAIL;
	
	private string _PASSWORD;
	
	private System.DateTime _INITIALIZE_DATE;
	
	private int _ACCOUNT_TYPE_ID;
	
	private string _CELLPHONE;
	
	private string _GENDER;
	
	private int _USER_BLOCK;
	
	private EntitySet<MARKER> _MARKERs;
	
	private EntitySet<QUESTION> _QUESTIONs;
	
	private EntityRef<ACCOUNT_TYPE> _ACCOUNT_TYPE;
	
	private EntityRef<ROLE> _ROLE;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSER_IDChanging(int value);
    partial void OnUSER_IDChanged();
    partial void OnROLE_IDChanging(int value);
    partial void OnROLE_IDChanged();
    partial void OnFIRST_NAMEChanging(string value);
    partial void OnFIRST_NAMEChanged();
    partial void OnLAST_NAMEChanging(string value);
    partial void OnLAST_NAMEChanged();
    partial void OnUSERNAMEChanging(string value);
    partial void OnUSERNAMEChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    partial void OnINITIALIZE_DATEChanging(System.DateTime value);
    partial void OnINITIALIZE_DATEChanged();
    partial void OnACCOUNT_TYPE_IDChanging(int value);
    partial void OnACCOUNT_TYPE_IDChanged();
    partial void OnCELLPHONEChanging(string value);
    partial void OnCELLPHONEChanged();
    partial void OnGENDERChanging(string value);
    partial void OnGENDERChanged();
    partial void OnUSER_BLOCKChanging(int value);
    partial void OnUSER_BLOCKChanged();
    #endregion
	
	public USER()
	{
		this._MARKERs = new EntitySet<MARKER>(new Action<MARKER>(this.attach_MARKERs), new Action<MARKER>(this.detach_MARKERs));
		this._QUESTIONs = new EntitySet<QUESTION>(new Action<QUESTION>(this.attach_QUESTIONs), new Action<QUESTION>(this.detach_QUESTIONs));
		this._ACCOUNT_TYPE = default(EntityRef<ACCOUNT_TYPE>);
		this._ROLE = default(EntityRef<ROLE>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int USER_ID
	{
		get
		{
			return this._USER_ID;
		}
		set
		{
			if ((this._USER_ID != value))
			{
				this.OnUSER_IDChanging(value);
				this.SendPropertyChanging();
				this._USER_ID = value;
				this.SendPropertyChanged("USER_ID");
				this.OnUSER_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE_ID", DbType="Int NOT NULL")]
	public int ROLE_ID
	{
		get
		{
			return this._ROLE_ID;
		}
		set
		{
			if ((this._ROLE_ID != value))
			{
				if (this._ROLE.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnROLE_IDChanging(value);
				this.SendPropertyChanging();
				this._ROLE_ID = value;
				this.SendPropertyChanged("ROLE_ID");
				this.OnROLE_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIRST_NAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string FIRST_NAME
	{
		get
		{
			return this._FIRST_NAME;
		}
		set
		{
			if ((this._FIRST_NAME != value))
			{
				this.OnFIRST_NAMEChanging(value);
				this.SendPropertyChanging();
				this._FIRST_NAME = value;
				this.SendPropertyChanged("FIRST_NAME");
				this.OnFIRST_NAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAST_NAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string LAST_NAME
	{
		get
		{
			return this._LAST_NAME;
		}
		set
		{
			if ((this._LAST_NAME != value))
			{
				this.OnLAST_NAMEChanging(value);
				this.SendPropertyChanging();
				this._LAST_NAME = value;
				this.SendPropertyChanged("LAST_NAME");
				this.OnLAST_NAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="VarChar(75) NOT NULL", CanBeNull=false)]
	public string USERNAME
	{
		get
		{
			return this._USERNAME;
		}
		set
		{
			if ((this._USERNAME != value))
			{
				this.OnUSERNAMEChanging(value);
				this.SendPropertyChanging();
				this._USERNAME = value;
				this.SendPropertyChanged("USERNAME");
				this.OnUSERNAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="VarChar(75) NOT NULL", CanBeNull=false)]
	public string EMAIL
	{
		get
		{
			return this._EMAIL;
		}
		set
		{
			if ((this._EMAIL != value))
			{
				this.OnEMAILChanging(value);
				this.SendPropertyChanging();
				this._EMAIL = value;
				this.SendPropertyChanged("EMAIL");
				this.OnEMAILChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
	public string PASSWORD
	{
		get
		{
			return this._PASSWORD;
		}
		set
		{
			if ((this._PASSWORD != value))
			{
				this.OnPASSWORDChanging(value);
				this.SendPropertyChanging();
				this._PASSWORD = value;
				this.SendPropertyChanged("PASSWORD");
				this.OnPASSWORDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INITIALIZE_DATE", DbType="Date NOT NULL")]
	public System.DateTime INITIALIZE_DATE
	{
		get
		{
			return this._INITIALIZE_DATE;
		}
		set
		{
			if ((this._INITIALIZE_DATE != value))
			{
				this.OnINITIALIZE_DATEChanging(value);
				this.SendPropertyChanging();
				this._INITIALIZE_DATE = value;
				this.SendPropertyChanged("INITIALIZE_DATE");
				this.OnINITIALIZE_DATEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACCOUNT_TYPE_ID", DbType="Int NOT NULL")]
	public int ACCOUNT_TYPE_ID
	{
		get
		{
			return this._ACCOUNT_TYPE_ID;
		}
		set
		{
			if ((this._ACCOUNT_TYPE_ID != value))
			{
				if (this._ACCOUNT_TYPE.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnACCOUNT_TYPE_IDChanging(value);
				this.SendPropertyChanging();
				this._ACCOUNT_TYPE_ID = value;
				this.SendPropertyChanged("ACCOUNT_TYPE_ID");
				this.OnACCOUNT_TYPE_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CELLPHONE", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string CELLPHONE
	{
		get
		{
			return this._CELLPHONE;
		}
		set
		{
			if ((this._CELLPHONE != value))
			{
				this.OnCELLPHONEChanging(value);
				this.SendPropertyChanging();
				this._CELLPHONE = value;
				this.SendPropertyChanged("CELLPHONE");
				this.OnCELLPHONEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GENDER", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string GENDER
	{
		get
		{
			return this._GENDER;
		}
		set
		{
			if ((this._GENDER != value))
			{
				this.OnGENDERChanging(value);
				this.SendPropertyChanging();
				this._GENDER = value;
				this.SendPropertyChanged("GENDER");
				this.OnGENDERChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_BLOCK", DbType="Int NOT NULL")]
	public int USER_BLOCK
	{
		get
		{
			return this._USER_BLOCK;
		}
		set
		{
			if ((this._USER_BLOCK != value))
			{
				this.OnUSER_BLOCKChanging(value);
				this.SendPropertyChanging();
				this._USER_BLOCK = value;
				this.SendPropertyChanged("USER_BLOCK");
				this.OnUSER_BLOCKChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_MARKER", Storage="_MARKERs", ThisKey="USER_ID", OtherKey="USER_ID")]
	public EntitySet<MARKER> MARKERs
	{
		get
		{
			return this._MARKERs;
		}
		set
		{
			this._MARKERs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_QUESTION", Storage="_QUESTIONs", ThisKey="USER_ID", OtherKey="USER_ID")]
	public EntitySet<QUESTION> QUESTIONs
	{
		get
		{
			return this._QUESTIONs;
		}
		set
		{
			this._QUESTIONs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACCOUNT_TYPE_USER", Storage="_ACCOUNT_TYPE", ThisKey="ACCOUNT_TYPE_ID", OtherKey="ACCOUNT_TYPE_ID", IsForeignKey=true)]
	public ACCOUNT_TYPE ACCOUNT_TYPE
	{
		get
		{
			return this._ACCOUNT_TYPE.Entity;
		}
		set
		{
			ACCOUNT_TYPE previousValue = this._ACCOUNT_TYPE.Entity;
			if (((previousValue != value) 
						|| (this._ACCOUNT_TYPE.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ACCOUNT_TYPE.Entity = null;
					previousValue.USERs.Remove(this);
				}
				this._ACCOUNT_TYPE.Entity = value;
				if ((value != null))
				{
					value.USERs.Add(this);
					this._ACCOUNT_TYPE_ID = value.ACCOUNT_TYPE_ID;
				}
				else
				{
					this._ACCOUNT_TYPE_ID = default(int);
				}
				this.SendPropertyChanged("ACCOUNT_TYPE");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ROLE_USER", Storage="_ROLE", ThisKey="ROLE_ID", OtherKey="ROLE_ID", IsForeignKey=true)]
	public ROLE ROLE
	{
		get
		{
			return this._ROLE.Entity;
		}
		set
		{
			ROLE previousValue = this._ROLE.Entity;
			if (((previousValue != value) 
						|| (this._ROLE.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ROLE.Entity = null;
					previousValue.USERs.Remove(this);
				}
				this._ROLE.Entity = value;
				if ((value != null))
				{
					value.USERs.Add(this);
					this._ROLE_ID = value.ROLE_ID;
				}
				else
				{
					this._ROLE_ID = default(int);
				}
				this.SendPropertyChanged("ROLE");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_MARKERs(MARKER entity)
	{
		this.SendPropertyChanging();
		entity.USER = this;
	}
	
	private void detach_MARKERs(MARKER entity)
	{
		this.SendPropertyChanging();
		entity.USER = null;
	}
	
	private void attach_QUESTIONs(QUESTION entity)
	{
		this.SendPropertyChanging();
		entity.USER = this;
	}
	
	private void detach_QUESTIONs(QUESTION entity)
	{
		this.SendPropertyChanging();
		entity.USER = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADVERTISMENT_TYPES")]
public partial class ADVERTISMENT_TYPE : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ADVERTISMENT_TYPE_ID;
	
	private string _DESCRIPTION;
	
	private EntitySet<ADVERTISMENT> _ADVERTISMENTs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnADVERTISMENT_TYPE_IDChanging(int value);
    partial void OnADVERTISMENT_TYPE_IDChanged();
    partial void OnDESCRIPTIONChanging(string value);
    partial void OnDESCRIPTIONChanged();
    #endregion
	
	public ADVERTISMENT_TYPE()
	{
		this._ADVERTISMENTs = new EntitySet<ADVERTISMENT>(new Action<ADVERTISMENT>(this.attach_ADVERTISMENTs), new Action<ADVERTISMENT>(this.detach_ADVERTISMENTs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADVERTISMENT_TYPE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ADVERTISMENT_TYPE_ID
	{
		get
		{
			return this._ADVERTISMENT_TYPE_ID;
		}
		set
		{
			if ((this._ADVERTISMENT_TYPE_ID != value))
			{
				this.OnADVERTISMENT_TYPE_IDChanging(value);
				this.SendPropertyChanging();
				this._ADVERTISMENT_TYPE_ID = value;
				this.SendPropertyChanged("ADVERTISMENT_TYPE_ID");
				this.OnADVERTISMENT_TYPE_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPTION", DbType="NVarChar(750) NOT NULL", CanBeNull=false)]
	public string DESCRIPTION
	{
		get
		{
			return this._DESCRIPTION;
		}
		set
		{
			if ((this._DESCRIPTION != value))
			{
				this.OnDESCRIPTIONChanging(value);
				this.SendPropertyChanging();
				this._DESCRIPTION = value;
				this.SendPropertyChanged("DESCRIPTION");
				this.OnDESCRIPTIONChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADVERTISMENT_TYPE_ADVERTISMENT", Storage="_ADVERTISMENTs", ThisKey="ADVERTISMENT_TYPE_ID", OtherKey="ADVERTISMENT_TYPE_ID")]
	public EntitySet<ADVERTISMENT> ADVERTISMENTs
	{
		get
		{
			return this._ADVERTISMENTs;
		}
		set
		{
			this._ADVERTISMENTs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ADVERTISMENTs(ADVERTISMENT entity)
	{
		this.SendPropertyChanging();
		entity.ADVERTISMENT_TYPE = this;
	}
	
	private void detach_ADVERTISMENTs(ADVERTISMENT entity)
	{
		this.SendPropertyChanging();
		entity.ADVERTISMENT_TYPE = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADVERTISMENTS")]
public partial class ADVERTISMENT : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ADVERTISMENT_ID;
	
	private int _ADVERTISMENT_TYPE_ID;
	
	private int _MARKER_ID;
	
	private string _DESCRIPTION;
	
	private System.DateTime _INITIALIZE_DATE;
	
	private System.DateTime _EXPIRE_DATE;
	
	private int _IS_PROMOTED;
	
	private int _IS_APPROVE_PROMOT;
	
	private EntitySet<MARKER> _MARKERs;
	
	private EntityRef<ADVERTISMENT_TYPE> _ADVERTISMENT_TYPE;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnADVERTISMENT_IDChanging(int value);
    partial void OnADVERTISMENT_IDChanged();
    partial void OnADVERTISMENT_TYPE_IDChanging(int value);
    partial void OnADVERTISMENT_TYPE_IDChanged();
    partial void OnMARKER_IDChanging(int value);
    partial void OnMARKER_IDChanged();
    partial void OnDESCRIPTIONChanging(string value);
    partial void OnDESCRIPTIONChanged();
    partial void OnINITIALIZE_DATEChanging(System.DateTime value);
    partial void OnINITIALIZE_DATEChanged();
    partial void OnEXPIRE_DATEChanging(System.DateTime value);
    partial void OnEXPIRE_DATEChanged();
    partial void OnIS_PROMOTEDChanging(int value);
    partial void OnIS_PROMOTEDChanged();
    partial void OnIS_APPROVE_PROMOTChanging(int value);
    partial void OnIS_APPROVE_PROMOTChanged();
    #endregion
	
	public ADVERTISMENT()
	{
		this._MARKERs = new EntitySet<MARKER>(new Action<MARKER>(this.attach_MARKERs), new Action<MARKER>(this.detach_MARKERs));
		this._ADVERTISMENT_TYPE = default(EntityRef<ADVERTISMENT_TYPE>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADVERTISMENT_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ADVERTISMENT_ID
	{
		get
		{
			return this._ADVERTISMENT_ID;
		}
		set
		{
			if ((this._ADVERTISMENT_ID != value))
			{
				this.OnADVERTISMENT_IDChanging(value);
				this.SendPropertyChanging();
				this._ADVERTISMENT_ID = value;
				this.SendPropertyChanged("ADVERTISMENT_ID");
				this.OnADVERTISMENT_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADVERTISMENT_TYPE_ID", DbType="Int NOT NULL")]
	public int ADVERTISMENT_TYPE_ID
	{
		get
		{
			return this._ADVERTISMENT_TYPE_ID;
		}
		set
		{
			if ((this._ADVERTISMENT_TYPE_ID != value))
			{
				if (this._ADVERTISMENT_TYPE.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnADVERTISMENT_TYPE_IDChanging(value);
				this.SendPropertyChanging();
				this._ADVERTISMENT_TYPE_ID = value;
				this.SendPropertyChanged("ADVERTISMENT_TYPE_ID");
				this.OnADVERTISMENT_TYPE_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MARKER_ID", DbType="Int NOT NULL")]
	public int MARKER_ID
	{
		get
		{
			return this._MARKER_ID;
		}
		set
		{
			if ((this._MARKER_ID != value))
			{
				this.OnMARKER_IDChanging(value);
				this.SendPropertyChanging();
				this._MARKER_ID = value;
				this.SendPropertyChanged("MARKER_ID");
				this.OnMARKER_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPTION", DbType="NVarChar(750) NOT NULL", CanBeNull=false)]
	public string DESCRIPTION
	{
		get
		{
			return this._DESCRIPTION;
		}
		set
		{
			if ((this._DESCRIPTION != value))
			{
				this.OnDESCRIPTIONChanging(value);
				this.SendPropertyChanging();
				this._DESCRIPTION = value;
				this.SendPropertyChanged("DESCRIPTION");
				this.OnDESCRIPTIONChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INITIALIZE_DATE", DbType="Date NOT NULL")]
	public System.DateTime INITIALIZE_DATE
	{
		get
		{
			return this._INITIALIZE_DATE;
		}
		set
		{
			if ((this._INITIALIZE_DATE != value))
			{
				this.OnINITIALIZE_DATEChanging(value);
				this.SendPropertyChanging();
				this._INITIALIZE_DATE = value;
				this.SendPropertyChanged("INITIALIZE_DATE");
				this.OnINITIALIZE_DATEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXPIRE_DATE", DbType="Date NOT NULL")]
	public System.DateTime EXPIRE_DATE
	{
		get
		{
			return this._EXPIRE_DATE;
		}
		set
		{
			if ((this._EXPIRE_DATE != value))
			{
				this.OnEXPIRE_DATEChanging(value);
				this.SendPropertyChanging();
				this._EXPIRE_DATE = value;
				this.SendPropertyChanged("EXPIRE_DATE");
				this.OnEXPIRE_DATEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_PROMOTED", DbType="Int NOT NULL")]
	public int IS_PROMOTED
	{
		get
		{
			return this._IS_PROMOTED;
		}
		set
		{
			if ((this._IS_PROMOTED != value))
			{
				this.OnIS_PROMOTEDChanging(value);
				this.SendPropertyChanging();
				this._IS_PROMOTED = value;
				this.SendPropertyChanged("IS_PROMOTED");
				this.OnIS_PROMOTEDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_APPROVE_PROMOT", DbType="Int NOT NULL")]
	public int IS_APPROVE_PROMOT
	{
		get
		{
			return this._IS_APPROVE_PROMOT;
		}
		set
		{
			if ((this._IS_APPROVE_PROMOT != value))
			{
				this.OnIS_APPROVE_PROMOTChanging(value);
				this.SendPropertyChanging();
				this._IS_APPROVE_PROMOT = value;
				this.SendPropertyChanged("IS_APPROVE_PROMOT");
				this.OnIS_APPROVE_PROMOTChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADVERTISMENT_MARKER", Storage="_MARKERs", ThisKey="ADVERTISMENT_ID", OtherKey="ADVERTISMENT_ID")]
	public EntitySet<MARKER> MARKERs
	{
		get
		{
			return this._MARKERs;
		}
		set
		{
			this._MARKERs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADVERTISMENT_TYPE_ADVERTISMENT", Storage="_ADVERTISMENT_TYPE", ThisKey="ADVERTISMENT_TYPE_ID", OtherKey="ADVERTISMENT_TYPE_ID", IsForeignKey=true)]
	public ADVERTISMENT_TYPE ADVERTISMENT_TYPE
	{
		get
		{
			return this._ADVERTISMENT_TYPE.Entity;
		}
		set
		{
			ADVERTISMENT_TYPE previousValue = this._ADVERTISMENT_TYPE.Entity;
			if (((previousValue != value) 
						|| (this._ADVERTISMENT_TYPE.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ADVERTISMENT_TYPE.Entity = null;
					previousValue.ADVERTISMENTs.Remove(this);
				}
				this._ADVERTISMENT_TYPE.Entity = value;
				if ((value != null))
				{
					value.ADVERTISMENTs.Add(this);
					this._ADVERTISMENT_TYPE_ID = value.ADVERTISMENT_TYPE_ID;
				}
				else
				{
					this._ADVERTISMENT_TYPE_ID = default(int);
				}
				this.SendPropertyChanged("ADVERTISMENT_TYPE");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_MARKERs(MARKER entity)
	{
		this.SendPropertyChanging();
		entity.ADVERTISMENT = this;
	}
	
	private void detach_MARKERs(MARKER entity)
	{
		this.SendPropertyChanging();
		entity.ADVERTISMENT = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AREA_COORINATES")]
public partial class AREA_COORINATE : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _AREA_COORDINATE_ID;
	
	private string _AREA_NAME;
	
	private decimal _LNG1;
	
	private decimal _LAT1;
	
	private decimal _LNG2;
	
	private decimal _LAT2;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAREA_COORDINATE_IDChanging(int value);
    partial void OnAREA_COORDINATE_IDChanged();
    partial void OnAREA_NAMEChanging(string value);
    partial void OnAREA_NAMEChanged();
    partial void OnLNG1Changing(decimal value);
    partial void OnLNG1Changed();
    partial void OnLAT1Changing(decimal value);
    partial void OnLAT1Changed();
    partial void OnLNG2Changing(decimal value);
    partial void OnLNG2Changed();
    partial void OnLAT2Changing(decimal value);
    partial void OnLAT2Changed();
    #endregion
	
	public AREA_COORINATE()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AREA_COORDINATE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int AREA_COORDINATE_ID
	{
		get
		{
			return this._AREA_COORDINATE_ID;
		}
		set
		{
			if ((this._AREA_COORDINATE_ID != value))
			{
				this.OnAREA_COORDINATE_IDChanging(value);
				this.SendPropertyChanging();
				this._AREA_COORDINATE_ID = value;
				this.SendPropertyChanged("AREA_COORDINATE_ID");
				this.OnAREA_COORDINATE_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AREA_NAME", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string AREA_NAME
	{
		get
		{
			return this._AREA_NAME;
		}
		set
		{
			if ((this._AREA_NAME != value))
			{
				this.OnAREA_NAMEChanging(value);
				this.SendPropertyChanging();
				this._AREA_NAME = value;
				this.SendPropertyChanged("AREA_NAME");
				this.OnAREA_NAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LNG1", DbType="Decimal(18,6) NOT NULL")]
	public decimal LNG1
	{
		get
		{
			return this._LNG1;
		}
		set
		{
			if ((this._LNG1 != value))
			{
				this.OnLNG1Changing(value);
				this.SendPropertyChanging();
				this._LNG1 = value;
				this.SendPropertyChanged("LNG1");
				this.OnLNG1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAT1", DbType="Decimal(18,6) NOT NULL")]
	public decimal LAT1
	{
		get
		{
			return this._LAT1;
		}
		set
		{
			if ((this._LAT1 != value))
			{
				this.OnLAT1Changing(value);
				this.SendPropertyChanging();
				this._LAT1 = value;
				this.SendPropertyChanged("LAT1");
				this.OnLAT1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LNG2", DbType="Decimal(18,6) NOT NULL")]
	public decimal LNG2
	{
		get
		{
			return this._LNG2;
		}
		set
		{
			if ((this._LNG2 != value))
			{
				this.OnLNG2Changing(value);
				this.SendPropertyChanging();
				this._LNG2 = value;
				this.SendPropertyChanged("LNG2");
				this.OnLNG2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAT2", DbType="Decimal(18,6) NOT NULL")]
	public decimal LAT2
	{
		get
		{
			return this._LAT2;
		}
		set
		{
			if ((this._LAT2 != value))
			{
				this.OnLAT2Changing(value);
				this.SendPropertyChanging();
				this._LAT2 = value;
				this.SendPropertyChanged("LAT2");
				this.OnLAT2Changed();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CATEGORIES")]
public partial class CATEGORy : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _CATEGORY_ID;
	
	private int _GENER_ID;
	
	private string _DESCRIPTION;
	
	private EntitySet<MARKERS_CATEGORy> _MARKERS_CATEGORies;
	
	private EntityRef<GENER> _GENER;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCATEGORY_IDChanging(int value);
    partial void OnCATEGORY_IDChanged();
    partial void OnGENER_IDChanging(int value);
    partial void OnGENER_IDChanged();
    partial void OnDESCRIPTIONChanging(string value);
    partial void OnDESCRIPTIONChanged();
    #endregion
	
	public CATEGORy()
	{
		this._MARKERS_CATEGORies = new EntitySet<MARKERS_CATEGORy>(new Action<MARKERS_CATEGORy>(this.attach_MARKERS_CATEGORies), new Action<MARKERS_CATEGORy>(this.detach_MARKERS_CATEGORies));
		this._GENER = default(EntityRef<GENER>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CATEGORY_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int CATEGORY_ID
	{
		get
		{
			return this._CATEGORY_ID;
		}
		set
		{
			if ((this._CATEGORY_ID != value))
			{
				this.OnCATEGORY_IDChanging(value);
				this.SendPropertyChanging();
				this._CATEGORY_ID = value;
				this.SendPropertyChanged("CATEGORY_ID");
				this.OnCATEGORY_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GENER_ID", DbType="Int NOT NULL")]
	public int GENER_ID
	{
		get
		{
			return this._GENER_ID;
		}
		set
		{
			if ((this._GENER_ID != value))
			{
				if (this._GENER.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnGENER_IDChanging(value);
				this.SendPropertyChanging();
				this._GENER_ID = value;
				this.SendPropertyChanged("GENER_ID");
				this.OnGENER_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPTION", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string DESCRIPTION
	{
		get
		{
			return this._DESCRIPTION;
		}
		set
		{
			if ((this._DESCRIPTION != value))
			{
				this.OnDESCRIPTIONChanging(value);
				this.SendPropertyChanging();
				this._DESCRIPTION = value;
				this.SendPropertyChanged("DESCRIPTION");
				this.OnDESCRIPTIONChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CATEGORy_MARKERS_CATEGORy", Storage="_MARKERS_CATEGORies", ThisKey="CATEGORY_ID", OtherKey="CATEGORY_ID")]
	public EntitySet<MARKERS_CATEGORy> MARKERS_CATEGORies
	{
		get
		{
			return this._MARKERS_CATEGORies;
		}
		set
		{
			this._MARKERS_CATEGORies.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GENER_CATEGORy", Storage="_GENER", ThisKey="GENER_ID", OtherKey="GENER_ID", IsForeignKey=true)]
	public GENER GENER
	{
		get
		{
			return this._GENER.Entity;
		}
		set
		{
			GENER previousValue = this._GENER.Entity;
			if (((previousValue != value) 
						|| (this._GENER.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._GENER.Entity = null;
					previousValue.CATEGORies.Remove(this);
				}
				this._GENER.Entity = value;
				if ((value != null))
				{
					value.CATEGORies.Add(this);
					this._GENER_ID = value.GENER_ID;
				}
				else
				{
					this._GENER_ID = default(int);
				}
				this.SendPropertyChanged("GENER");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_MARKERS_CATEGORies(MARKERS_CATEGORy entity)
	{
		this.SendPropertyChanging();
		entity.CATEGORy = this;
	}
	
	private void detach_MARKERS_CATEGORies(MARKERS_CATEGORy entity)
	{
		this.SendPropertyChanging();
		entity.CATEGORy = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GENERS")]
public partial class GENER : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _GENER_ID;
	
	private string _DESCRIPTION;
	
	private EntitySet<CATEGORy> _CATEGORies;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGENER_IDChanging(int value);
    partial void OnGENER_IDChanged();
    partial void OnDESCRIPTIONChanging(string value);
    partial void OnDESCRIPTIONChanged();
    #endregion
	
	public GENER()
	{
		this._CATEGORies = new EntitySet<CATEGORy>(new Action<CATEGORy>(this.attach_CATEGORies), new Action<CATEGORy>(this.detach_CATEGORies));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GENER_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int GENER_ID
	{
		get
		{
			return this._GENER_ID;
		}
		set
		{
			if ((this._GENER_ID != value))
			{
				this.OnGENER_IDChanging(value);
				this.SendPropertyChanging();
				this._GENER_ID = value;
				this.SendPropertyChanged("GENER_ID");
				this.OnGENER_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPTION", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string DESCRIPTION
	{
		get
		{
			return this._DESCRIPTION;
		}
		set
		{
			if ((this._DESCRIPTION != value))
			{
				this.OnDESCRIPTIONChanging(value);
				this.SendPropertyChanging();
				this._DESCRIPTION = value;
				this.SendPropertyChanged("DESCRIPTION");
				this.OnDESCRIPTIONChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GENER_CATEGORy", Storage="_CATEGORies", ThisKey="GENER_ID", OtherKey="GENER_ID")]
	public EntitySet<CATEGORy> CATEGORies
	{
		get
		{
			return this._CATEGORies;
		}
		set
		{
			this._CATEGORies.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_CATEGORies(CATEGORy entity)
	{
		this.SendPropertyChanging();
		entity.GENER = this;
	}
	
	private void detach_CATEGORies(CATEGORy entity)
	{
		this.SendPropertyChanging();
		entity.GENER = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MARKERS")]
public partial class MARKER : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MARKER_ID;
	
	private int _MASTER_ID;
	
	private int _USER_ID;
	
	private System.DateTime _INITIALIZE_DATE;
	
	private string _MARKER_NAME;
	
	private string _DESCRIPTION;
	
	private decimal _LNG;
	
	private decimal _LAT;
	
	private string _ADDRESS;
	
	private int _VISITS_COUNTER;
	
	private System.Nullable<int> _ADVERTISMENT_ID;
	
	private int _IS_APPORVED;
	
	private string _TYPE;
	
	private int _IS_EVENT;
	
	private string _DAYS_OPEN;
	
	private System.Nullable<System.TimeSpan> _TIME_FROM;
	
	private System.Nullable<System.TimeSpan> _TIME_TO;
	
	private string _MAIN_IMAGE_PATH;
	
	private int _APPROVAL_VOTE;
	
	private int _RATE;
	
	private int _RATE_COUNT;
	
	private EntitySet<MARKERS_CATEGORy> _MARKERS_CATEGORies;
	
	private EntitySet<PHONE> _PHONEs;
	
	private EntitySet<REVIEW> _REVIEWs;
	
	private EntityRef<ADVERTISMENT> _ADVERTISMENT;
	
	private EntityRef<USER> _USER;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMARKER_IDChanging(int value);
    partial void OnMARKER_IDChanged();
    partial void OnMASTER_IDChanging(int value);
    partial void OnMASTER_IDChanged();
    partial void OnUSER_IDChanging(int value);
    partial void OnUSER_IDChanged();
    partial void OnINITIALIZE_DATEChanging(System.DateTime value);
    partial void OnINITIALIZE_DATEChanged();
    partial void OnMARKER_NAMEChanging(string value);
    partial void OnMARKER_NAMEChanged();
    partial void OnDESCRIPTIONChanging(string value);
    partial void OnDESCRIPTIONChanged();
    partial void OnLNGChanging(decimal value);
    partial void OnLNGChanged();
    partial void OnLATChanging(decimal value);
    partial void OnLATChanged();
    partial void OnADDRESSChanging(string value);
    partial void OnADDRESSChanged();
    partial void OnVISITS_COUNTERChanging(int value);
    partial void OnVISITS_COUNTERChanged();
    partial void OnADVERTISMENT_IDChanging(System.Nullable<int> value);
    partial void OnADVERTISMENT_IDChanged();
    partial void OnIS_APPORVEDChanging(int value);
    partial void OnIS_APPORVEDChanged();
    partial void OnTYPEChanging(string value);
    partial void OnTYPEChanged();
    partial void OnIS_EVENTChanging(int value);
    partial void OnIS_EVENTChanged();
    partial void OnDAYS_OPENChanging(string value);
    partial void OnDAYS_OPENChanged();
    partial void OnTIME_FROMChanging(System.Nullable<System.TimeSpan> value);
    partial void OnTIME_FROMChanged();
    partial void OnTIME_TOChanging(System.Nullable<System.TimeSpan> value);
    partial void OnTIME_TOChanged();
    partial void OnMAIN_IMAGE_PATHChanging(string value);
    partial void OnMAIN_IMAGE_PATHChanged();
    partial void OnAPPROVAL_VOTEChanging(int value);
    partial void OnAPPROVAL_VOTEChanged();
    partial void OnRATEChanging(int value);
    partial void OnRATEChanged();
    partial void OnRATE_COUNTChanging(int value);
    partial void OnRATE_COUNTChanged();
    #endregion
	
	public MARKER()
	{
		this._MARKERS_CATEGORies = new EntitySet<MARKERS_CATEGORy>(new Action<MARKERS_CATEGORy>(this.attach_MARKERS_CATEGORies), new Action<MARKERS_CATEGORy>(this.detach_MARKERS_CATEGORies));
		this._PHONEs = new EntitySet<PHONE>(new Action<PHONE>(this.attach_PHONEs), new Action<PHONE>(this.detach_PHONEs));
		this._REVIEWs = new EntitySet<REVIEW>(new Action<REVIEW>(this.attach_REVIEWs), new Action<REVIEW>(this.detach_REVIEWs));
		this._ADVERTISMENT = default(EntityRef<ADVERTISMENT>);
		this._USER = default(EntityRef<USER>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MARKER_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int MARKER_ID
	{
		get
		{
			return this._MARKER_ID;
		}
		set
		{
			if ((this._MARKER_ID != value))
			{
				this.OnMARKER_IDChanging(value);
				this.SendPropertyChanging();
				this._MARKER_ID = value;
				this.SendPropertyChanged("MARKER_ID");
				this.OnMARKER_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASTER_ID", DbType="Int NOT NULL")]
	public int MASTER_ID
	{
		get
		{
			return this._MASTER_ID;
		}
		set
		{
			if ((this._MASTER_ID != value))
			{
				this.OnMASTER_IDChanging(value);
				this.SendPropertyChanging();
				this._MASTER_ID = value;
				this.SendPropertyChanged("MASTER_ID");
				this.OnMASTER_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", DbType="Int NOT NULL")]
	public int USER_ID
	{
		get
		{
			return this._USER_ID;
		}
		set
		{
			if ((this._USER_ID != value))
			{
				if (this._USER.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUSER_IDChanging(value);
				this.SendPropertyChanging();
				this._USER_ID = value;
				this.SendPropertyChanged("USER_ID");
				this.OnUSER_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INITIALIZE_DATE", DbType="Date NOT NULL")]
	public System.DateTime INITIALIZE_DATE
	{
		get
		{
			return this._INITIALIZE_DATE;
		}
		set
		{
			if ((this._INITIALIZE_DATE != value))
			{
				this.OnINITIALIZE_DATEChanging(value);
				this.SendPropertyChanging();
				this._INITIALIZE_DATE = value;
				this.SendPropertyChanged("INITIALIZE_DATE");
				this.OnINITIALIZE_DATEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MARKER_NAME", DbType="NVarChar(75) NOT NULL", CanBeNull=false)]
	public string MARKER_NAME
	{
		get
		{
			return this._MARKER_NAME;
		}
		set
		{
			if ((this._MARKER_NAME != value))
			{
				this.OnMARKER_NAMEChanging(value);
				this.SendPropertyChanging();
				this._MARKER_NAME = value;
				this.SendPropertyChanged("MARKER_NAME");
				this.OnMARKER_NAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPTION", DbType="NVarChar(750) NOT NULL", CanBeNull=false)]
	public string DESCRIPTION
	{
		get
		{
			return this._DESCRIPTION;
		}
		set
		{
			if ((this._DESCRIPTION != value))
			{
				this.OnDESCRIPTIONChanging(value);
				this.SendPropertyChanging();
				this._DESCRIPTION = value;
				this.SendPropertyChanged("DESCRIPTION");
				this.OnDESCRIPTIONChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LNG", DbType="Decimal(18,6) NOT NULL")]
	public decimal LNG
	{
		get
		{
			return this._LNG;
		}
		set
		{
			if ((this._LNG != value))
			{
				this.OnLNGChanging(value);
				this.SendPropertyChanging();
				this._LNG = value;
				this.SendPropertyChanged("LNG");
				this.OnLNGChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAT", DbType="Decimal(18,6) NOT NULL")]
	public decimal LAT
	{
		get
		{
			return this._LAT;
		}
		set
		{
			if ((this._LAT != value))
			{
				this.OnLATChanging(value);
				this.SendPropertyChanging();
				this._LAT = value;
				this.SendPropertyChanged("LAT");
				this.OnLATChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS", DbType="NVarChar(750) NOT NULL", CanBeNull=false)]
	public string ADDRESS
	{
		get
		{
			return this._ADDRESS;
		}
		set
		{
			if ((this._ADDRESS != value))
			{
				this.OnADDRESSChanging(value);
				this.SendPropertyChanging();
				this._ADDRESS = value;
				this.SendPropertyChanged("ADDRESS");
				this.OnADDRESSChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VISITS_COUNTER", DbType="Int NOT NULL")]
	public int VISITS_COUNTER
	{
		get
		{
			return this._VISITS_COUNTER;
		}
		set
		{
			if ((this._VISITS_COUNTER != value))
			{
				this.OnVISITS_COUNTERChanging(value);
				this.SendPropertyChanging();
				this._VISITS_COUNTER = value;
				this.SendPropertyChanged("VISITS_COUNTER");
				this.OnVISITS_COUNTERChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADVERTISMENT_ID", DbType="Int")]
	public System.Nullable<int> ADVERTISMENT_ID
	{
		get
		{
			return this._ADVERTISMENT_ID;
		}
		set
		{
			if ((this._ADVERTISMENT_ID != value))
			{
				if (this._ADVERTISMENT.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnADVERTISMENT_IDChanging(value);
				this.SendPropertyChanging();
				this._ADVERTISMENT_ID = value;
				this.SendPropertyChanged("ADVERTISMENT_ID");
				this.OnADVERTISMENT_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_APPORVED", DbType="Int NOT NULL")]
	public int IS_APPORVED
	{
		get
		{
			return this._IS_APPORVED;
		}
		set
		{
			if ((this._IS_APPORVED != value))
			{
				this.OnIS_APPORVEDChanging(value);
				this.SendPropertyChanging();
				this._IS_APPORVED = value;
				this.SendPropertyChanged("IS_APPORVED");
				this.OnIS_APPORVEDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYPE", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string TYPE
	{
		get
		{
			return this._TYPE;
		}
		set
		{
			if ((this._TYPE != value))
			{
				this.OnTYPEChanging(value);
				this.SendPropertyChanging();
				this._TYPE = value;
				this.SendPropertyChanged("TYPE");
				this.OnTYPEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_EVENT", DbType="Int NOT NULL")]
	public int IS_EVENT
	{
		get
		{
			return this._IS_EVENT;
		}
		set
		{
			if ((this._IS_EVENT != value))
			{
				this.OnIS_EVENTChanging(value);
				this.SendPropertyChanging();
				this._IS_EVENT = value;
				this.SendPropertyChanged("IS_EVENT");
				this.OnIS_EVENTChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DAYS_OPEN", DbType="VarChar(300)")]
	public string DAYS_OPEN
	{
		get
		{
			return this._DAYS_OPEN;
		}
		set
		{
			if ((this._DAYS_OPEN != value))
			{
				this.OnDAYS_OPENChanging(value);
				this.SendPropertyChanging();
				this._DAYS_OPEN = value;
				this.SendPropertyChanged("DAYS_OPEN");
				this.OnDAYS_OPENChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIME_FROM", DbType="Time")]
	public System.Nullable<System.TimeSpan> TIME_FROM
	{
		get
		{
			return this._TIME_FROM;
		}
		set
		{
			if ((this._TIME_FROM != value))
			{
				this.OnTIME_FROMChanging(value);
				this.SendPropertyChanging();
				this._TIME_FROM = value;
				this.SendPropertyChanged("TIME_FROM");
				this.OnTIME_FROMChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIME_TO", DbType="Time")]
	public System.Nullable<System.TimeSpan> TIME_TO
	{
		get
		{
			return this._TIME_TO;
		}
		set
		{
			if ((this._TIME_TO != value))
			{
				this.OnTIME_TOChanging(value);
				this.SendPropertyChanging();
				this._TIME_TO = value;
				this.SendPropertyChanged("TIME_TO");
				this.OnTIME_TOChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAIN_IMAGE_PATH", DbType="NVarChar(1000)")]
	public string MAIN_IMAGE_PATH
	{
		get
		{
			return this._MAIN_IMAGE_PATH;
		}
		set
		{
			if ((this._MAIN_IMAGE_PATH != value))
			{
				this.OnMAIN_IMAGE_PATHChanging(value);
				this.SendPropertyChanging();
				this._MAIN_IMAGE_PATH = value;
				this.SendPropertyChanged("MAIN_IMAGE_PATH");
				this.OnMAIN_IMAGE_PATHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_APPROVAL_VOTE", DbType="Int NOT NULL")]
	public int APPROVAL_VOTE
	{
		get
		{
			return this._APPROVAL_VOTE;
		}
		set
		{
			if ((this._APPROVAL_VOTE != value))
			{
				this.OnAPPROVAL_VOTEChanging(value);
				this.SendPropertyChanging();
				this._APPROVAL_VOTE = value;
				this.SendPropertyChanged("APPROVAL_VOTE");
				this.OnAPPROVAL_VOTEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RATE", DbType="Int NOT NULL")]
	public int RATE
	{
		get
		{
			return this._RATE;
		}
		set
		{
			if ((this._RATE != value))
			{
				this.OnRATEChanging(value);
				this.SendPropertyChanging();
				this._RATE = value;
				this.SendPropertyChanged("RATE");
				this.OnRATEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RATE_COUNT", DbType="Int NOT NULL")]
	public int RATE_COUNT
	{
		get
		{
			return this._RATE_COUNT;
		}
		set
		{
			if ((this._RATE_COUNT != value))
			{
				this.OnRATE_COUNTChanging(value);
				this.SendPropertyChanging();
				this._RATE_COUNT = value;
				this.SendPropertyChanged("RATE_COUNT");
				this.OnRATE_COUNTChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MARKER_MARKERS_CATEGORy", Storage="_MARKERS_CATEGORies", ThisKey="MARKER_ID", OtherKey="MARKER_ID")]
	public EntitySet<MARKERS_CATEGORy> MARKERS_CATEGORies
	{
		get
		{
			return this._MARKERS_CATEGORies;
		}
		set
		{
			this._MARKERS_CATEGORies.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MARKER_PHONE", Storage="_PHONEs", ThisKey="MARKER_ID", OtherKey="MARKER_ID")]
	public EntitySet<PHONE> PHONEs
	{
		get
		{
			return this._PHONEs;
		}
		set
		{
			this._PHONEs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MARKER_REVIEW", Storage="_REVIEWs", ThisKey="MARKER_ID", OtherKey="MARKER_ID")]
	public EntitySet<REVIEW> REVIEWs
	{
		get
		{
			return this._REVIEWs;
		}
		set
		{
			this._REVIEWs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADVERTISMENT_MARKER", Storage="_ADVERTISMENT", ThisKey="ADVERTISMENT_ID", OtherKey="ADVERTISMENT_ID", IsForeignKey=true)]
	public ADVERTISMENT ADVERTISMENT
	{
		get
		{
			return this._ADVERTISMENT.Entity;
		}
		set
		{
			ADVERTISMENT previousValue = this._ADVERTISMENT.Entity;
			if (((previousValue != value) 
						|| (this._ADVERTISMENT.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ADVERTISMENT.Entity = null;
					previousValue.MARKERs.Remove(this);
				}
				this._ADVERTISMENT.Entity = value;
				if ((value != null))
				{
					value.MARKERs.Add(this);
					this._ADVERTISMENT_ID = value.ADVERTISMENT_ID;
				}
				else
				{
					this._ADVERTISMENT_ID = default(Nullable<int>);
				}
				this.SendPropertyChanged("ADVERTISMENT");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_MARKER", Storage="_USER", ThisKey="USER_ID", OtherKey="USER_ID", IsForeignKey=true)]
	public USER USER
	{
		get
		{
			return this._USER.Entity;
		}
		set
		{
			USER previousValue = this._USER.Entity;
			if (((previousValue != value) 
						|| (this._USER.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._USER.Entity = null;
					previousValue.MARKERs.Remove(this);
				}
				this._USER.Entity = value;
				if ((value != null))
				{
					value.MARKERs.Add(this);
					this._USER_ID = value.USER_ID;
				}
				else
				{
					this._USER_ID = default(int);
				}
				this.SendPropertyChanged("USER");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_MARKERS_CATEGORies(MARKERS_CATEGORy entity)
	{
		this.SendPropertyChanging();
		entity.MARKER = this;
	}
	
	private void detach_MARKERS_CATEGORies(MARKERS_CATEGORy entity)
	{
		this.SendPropertyChanging();
		entity.MARKER = null;
	}
	
	private void attach_PHONEs(PHONE entity)
	{
		this.SendPropertyChanging();
		entity.MARKER = this;
	}
	
	private void detach_PHONEs(PHONE entity)
	{
		this.SendPropertyChanging();
		entity.MARKER = null;
	}
	
	private void attach_REVIEWs(REVIEW entity)
	{
		this.SendPropertyChanging();
		entity.MARKER = this;
	}
	
	private void detach_REVIEWs(REVIEW entity)
	{
		this.SendPropertyChanging();
		entity.MARKER = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MARKERS_CATEGORIES")]
public partial class MARKERS_CATEGORy : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MARKER_ID;
	
	private int _CATEGORY_ID;
	
	private EntityRef<CATEGORy> _CATEGORy;
	
	private EntityRef<MARKER> _MARKER;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMARKER_IDChanging(int value);
    partial void OnMARKER_IDChanged();
    partial void OnCATEGORY_IDChanging(int value);
    partial void OnCATEGORY_IDChanged();
    #endregion
	
	public MARKERS_CATEGORy()
	{
		this._CATEGORy = default(EntityRef<CATEGORy>);
		this._MARKER = default(EntityRef<MARKER>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MARKER_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int MARKER_ID
	{
		get
		{
			return this._MARKER_ID;
		}
		set
		{
			if ((this._MARKER_ID != value))
			{
				if (this._MARKER.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMARKER_IDChanging(value);
				this.SendPropertyChanging();
				this._MARKER_ID = value;
				this.SendPropertyChanged("MARKER_ID");
				this.OnMARKER_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CATEGORY_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int CATEGORY_ID
	{
		get
		{
			return this._CATEGORY_ID;
		}
		set
		{
			if ((this._CATEGORY_ID != value))
			{
				if (this._CATEGORy.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCATEGORY_IDChanging(value);
				this.SendPropertyChanging();
				this._CATEGORY_ID = value;
				this.SendPropertyChanged("CATEGORY_ID");
				this.OnCATEGORY_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CATEGORy_MARKERS_CATEGORy", Storage="_CATEGORy", ThisKey="CATEGORY_ID", OtherKey="CATEGORY_ID", IsForeignKey=true)]
	public CATEGORy CATEGORy
	{
		get
		{
			return this._CATEGORy.Entity;
		}
		set
		{
			CATEGORy previousValue = this._CATEGORy.Entity;
			if (((previousValue != value) 
						|| (this._CATEGORy.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._CATEGORy.Entity = null;
					previousValue.MARKERS_CATEGORies.Remove(this);
				}
				this._CATEGORy.Entity = value;
				if ((value != null))
				{
					value.MARKERS_CATEGORies.Add(this);
					this._CATEGORY_ID = value.CATEGORY_ID;
				}
				else
				{
					this._CATEGORY_ID = default(int);
				}
				this.SendPropertyChanged("CATEGORy");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MARKER_MARKERS_CATEGORy", Storage="_MARKER", ThisKey="MARKER_ID", OtherKey="MARKER_ID", IsForeignKey=true)]
	public MARKER MARKER
	{
		get
		{
			return this._MARKER.Entity;
		}
		set
		{
			MARKER previousValue = this._MARKER.Entity;
			if (((previousValue != value) 
						|| (this._MARKER.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._MARKER.Entity = null;
					previousValue.MARKERS_CATEGORies.Remove(this);
				}
				this._MARKER.Entity = value;
				if ((value != null))
				{
					value.MARKERS_CATEGORies.Add(this);
					this._MARKER_ID = value.MARKER_ID;
				}
				else
				{
					this._MARKER_ID = default(int);
				}
				this.SendPropertyChanged("MARKER");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PAGES")]
public partial class PAGE : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PAGE_ID;
	
	private string _PAGE_NAME;
	
	private string _PAGE_PATH;
	
	private EntitySet<ROLES_PAGE> _ROLES_PAGEs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPAGE_IDChanging(int value);
    partial void OnPAGE_IDChanged();
    partial void OnPAGE_NAMEChanging(string value);
    partial void OnPAGE_NAMEChanged();
    partial void OnPAGE_PATHChanging(string value);
    partial void OnPAGE_PATHChanged();
    #endregion
	
	public PAGE()
	{
		this._ROLES_PAGEs = new EntitySet<ROLES_PAGE>(new Action<ROLES_PAGE>(this.attach_ROLES_PAGEs), new Action<ROLES_PAGE>(this.detach_ROLES_PAGEs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAGE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PAGE_ID
	{
		get
		{
			return this._PAGE_ID;
		}
		set
		{
			if ((this._PAGE_ID != value))
			{
				this.OnPAGE_IDChanging(value);
				this.SendPropertyChanging();
				this._PAGE_ID = value;
				this.SendPropertyChanged("PAGE_ID");
				this.OnPAGE_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAGE_NAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string PAGE_NAME
	{
		get
		{
			return this._PAGE_NAME;
		}
		set
		{
			if ((this._PAGE_NAME != value))
			{
				this.OnPAGE_NAMEChanging(value);
				this.SendPropertyChanging();
				this._PAGE_NAME = value;
				this.SendPropertyChanged("PAGE_NAME");
				this.OnPAGE_NAMEChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAGE_PATH", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
	public string PAGE_PATH
	{
		get
		{
			return this._PAGE_PATH;
		}
		set
		{
			if ((this._PAGE_PATH != value))
			{
				this.OnPAGE_PATHChanging(value);
				this.SendPropertyChanging();
				this._PAGE_PATH = value;
				this.SendPropertyChanged("PAGE_PATH");
				this.OnPAGE_PATHChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAGE_ROLES_PAGE", Storage="_ROLES_PAGEs", ThisKey="PAGE_ID", OtherKey="PAGE_ID")]
	public EntitySet<ROLES_PAGE> ROLES_PAGEs
	{
		get
		{
			return this._ROLES_PAGEs;
		}
		set
		{
			this._ROLES_PAGEs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_ROLES_PAGEs(ROLES_PAGE entity)
	{
		this.SendPropertyChanging();
		entity.PAGE = this;
	}
	
	private void detach_ROLES_PAGEs(ROLES_PAGE entity)
	{
		this.SendPropertyChanging();
		entity.PAGE = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONES")]
public partial class PHONE : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PHONES;
	
	private int _MARKER_ID;
	
	private string _PHONE_NUMBER;
	
	private EntityRef<MARKER> _MARKER;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPHONESChanging(int value);
    partial void OnPHONESChanged();
    partial void OnMARKER_IDChanging(int value);
    partial void OnMARKER_IDChanged();
    partial void OnPHONE_NUMBERChanging(string value);
    partial void OnPHONE_NUMBERChanged();
    #endregion
	
	public PHONE()
	{
		this._MARKER = default(EntityRef<MARKER>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONES", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int PHONES
	{
		get
		{
			return this._PHONES;
		}
		set
		{
			if ((this._PHONES != value))
			{
				this.OnPHONESChanging(value);
				this.SendPropertyChanging();
				this._PHONES = value;
				this.SendPropertyChanged("PHONES");
				this.OnPHONESChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MARKER_ID", DbType="Int NOT NULL")]
	public int MARKER_ID
	{
		get
		{
			return this._MARKER_ID;
		}
		set
		{
			if ((this._MARKER_ID != value))
			{
				if (this._MARKER.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMARKER_IDChanging(value);
				this.SendPropertyChanging();
				this._MARKER_ID = value;
				this.SendPropertyChanged("MARKER_ID");
				this.OnMARKER_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONE_NUMBER", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string PHONE_NUMBER
	{
		get
		{
			return this._PHONE_NUMBER;
		}
		set
		{
			if ((this._PHONE_NUMBER != value))
			{
				this.OnPHONE_NUMBERChanging(value);
				this.SendPropertyChanging();
				this._PHONE_NUMBER = value;
				this.SendPropertyChanged("PHONE_NUMBER");
				this.OnPHONE_NUMBERChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MARKER_PHONE", Storage="_MARKER", ThisKey="MARKER_ID", OtherKey="MARKER_ID", IsForeignKey=true)]
	public MARKER MARKER
	{
		get
		{
			return this._MARKER.Entity;
		}
		set
		{
			MARKER previousValue = this._MARKER.Entity;
			if (((previousValue != value) 
						|| (this._MARKER.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._MARKER.Entity = null;
					previousValue.PHONEs.Remove(this);
				}
				this._MARKER.Entity = value;
				if ((value != null))
				{
					value.PHONEs.Add(this);
					this._MARKER_ID = value.MARKER_ID;
				}
				else
				{
					this._MARKER_ID = default(int);
				}
				this.SendPropertyChanged("MARKER");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QUESTIONS")]
public partial class QUESTION : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _QUESTION_ID;
	
	private int _USER_ID;
	
	private string _QUESTION1;
	
	private string _ANSWER;
	
	private bool _FAQ;
	
	private EntityRef<USER> _USER;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQUESTION_IDChanging(int value);
    partial void OnQUESTION_IDChanged();
    partial void OnUSER_IDChanging(int value);
    partial void OnUSER_IDChanged();
    partial void OnQUESTION1Changing(string value);
    partial void OnQUESTION1Changed();
    partial void OnANSWERChanging(string value);
    partial void OnANSWERChanged();
    partial void OnFAQChanging(bool value);
    partial void OnFAQChanged();
    #endregion
	
	public QUESTION()
	{
		this._USER = default(EntityRef<USER>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUESTION_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int QUESTION_ID
	{
		get
		{
			return this._QUESTION_ID;
		}
		set
		{
			if ((this._QUESTION_ID != value))
			{
				this.OnQUESTION_IDChanging(value);
				this.SendPropertyChanging();
				this._QUESTION_ID = value;
				this.SendPropertyChanged("QUESTION_ID");
				this.OnQUESTION_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", DbType="Int NOT NULL")]
	public int USER_ID
	{
		get
		{
			return this._USER_ID;
		}
		set
		{
			if ((this._USER_ID != value))
			{
				if (this._USER.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUSER_IDChanging(value);
				this.SendPropertyChanging();
				this._USER_ID = value;
				this.SendPropertyChanged("USER_ID");
				this.OnUSER_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="QUESTION", Storage="_QUESTION1", DbType="NVarChar(750) NOT NULL", CanBeNull=false)]
	public string QUESTION1
	{
		get
		{
			return this._QUESTION1;
		}
		set
		{
			if ((this._QUESTION1 != value))
			{
				this.OnQUESTION1Changing(value);
				this.SendPropertyChanging();
				this._QUESTION1 = value;
				this.SendPropertyChanged("QUESTION1");
				this.OnQUESTION1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ANSWER", DbType="NVarChar(750) NOT NULL", CanBeNull=false)]
	public string ANSWER
	{
		get
		{
			return this._ANSWER;
		}
		set
		{
			if ((this._ANSWER != value))
			{
				this.OnANSWERChanging(value);
				this.SendPropertyChanging();
				this._ANSWER = value;
				this.SendPropertyChanged("ANSWER");
				this.OnANSWERChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAQ", DbType="Bit NOT NULL")]
	public bool FAQ
	{
		get
		{
			return this._FAQ;
		}
		set
		{
			if ((this._FAQ != value))
			{
				this.OnFAQChanging(value);
				this.SendPropertyChanging();
				this._FAQ = value;
				this.SendPropertyChanged("FAQ");
				this.OnFAQChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_QUESTION", Storage="_USER", ThisKey="USER_ID", OtherKey="USER_ID", IsForeignKey=true)]
	public USER USER
	{
		get
		{
			return this._USER.Entity;
		}
		set
		{
			USER previousValue = this._USER.Entity;
			if (((previousValue != value) 
						|| (this._USER.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._USER.Entity = null;
					previousValue.QUESTIONs.Remove(this);
				}
				this._USER.Entity = value;
				if ((value != null))
				{
					value.QUESTIONs.Add(this);
					this._USER_ID = value.USER_ID;
				}
				else
				{
					this._USER_ID = default(int);
				}
				this.SendPropertyChanged("USER");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.REVIEWS")]
public partial class REVIEW : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _REVIEW_ID;
	
	private int _MARKER_ID;
	
	private string _DESCRIPTION;
	
	private string _EMAIL;
	
	private EntityRef<MARKER> _MARKER;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnREVIEW_IDChanging(int value);
    partial void OnREVIEW_IDChanged();
    partial void OnMARKER_IDChanging(int value);
    partial void OnMARKER_IDChanged();
    partial void OnDESCRIPTIONChanging(string value);
    partial void OnDESCRIPTIONChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    #endregion
	
	public REVIEW()
	{
		this._MARKER = default(EntityRef<MARKER>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REVIEW_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int REVIEW_ID
	{
		get
		{
			return this._REVIEW_ID;
		}
		set
		{
			if ((this._REVIEW_ID != value))
			{
				this.OnREVIEW_IDChanging(value);
				this.SendPropertyChanging();
				this._REVIEW_ID = value;
				this.SendPropertyChanged("REVIEW_ID");
				this.OnREVIEW_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MARKER_ID", DbType="Int NOT NULL")]
	public int MARKER_ID
	{
		get
		{
			return this._MARKER_ID;
		}
		set
		{
			if ((this._MARKER_ID != value))
			{
				if (this._MARKER.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMARKER_IDChanging(value);
				this.SendPropertyChanging();
				this._MARKER_ID = value;
				this.SendPropertyChanged("MARKER_ID");
				this.OnMARKER_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPTION", DbType="NVarChar(750) NOT NULL", CanBeNull=false)]
	public string DESCRIPTION
	{
		get
		{
			return this._DESCRIPTION;
		}
		set
		{
			if ((this._DESCRIPTION != value))
			{
				this.OnDESCRIPTIONChanging(value);
				this.SendPropertyChanging();
				this._DESCRIPTION = value;
				this.SendPropertyChanged("DESCRIPTION");
				this.OnDESCRIPTIONChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(750) NOT NULL", CanBeNull=false)]
	public string EMAIL
	{
		get
		{
			return this._EMAIL;
		}
		set
		{
			if ((this._EMAIL != value))
			{
				this.OnEMAILChanging(value);
				this.SendPropertyChanging();
				this._EMAIL = value;
				this.SendPropertyChanged("EMAIL");
				this.OnEMAILChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MARKER_REVIEW", Storage="_MARKER", ThisKey="MARKER_ID", OtherKey="MARKER_ID", IsForeignKey=true)]
	public MARKER MARKER
	{
		get
		{
			return this._MARKER.Entity;
		}
		set
		{
			MARKER previousValue = this._MARKER.Entity;
			if (((previousValue != value) 
						|| (this._MARKER.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._MARKER.Entity = null;
					previousValue.REVIEWs.Remove(this);
				}
				this._MARKER.Entity = value;
				if ((value != null))
				{
					value.REVIEWs.Add(this);
					this._MARKER_ID = value.MARKER_ID;
				}
				else
				{
					this._MARKER_ID = default(int);
				}
				this.SendPropertyChanged("MARKER");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ROLES")]
public partial class ROLE : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ROLE_ID;
	
	private string _DESCRIPTION;
	
	private string _ROLE_MISSION;
	
	private EntitySet<USER> _USERs;
	
	private EntitySet<ROLES_PAGE> _ROLES_PAGEs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnROLE_IDChanging(int value);
    partial void OnROLE_IDChanged();
    partial void OnDESCRIPTIONChanging(string value);
    partial void OnDESCRIPTIONChanged();
    partial void OnROLE_MISSIONChanging(string value);
    partial void OnROLE_MISSIONChanged();
    #endregion
	
	public ROLE()
	{
		this._USERs = new EntitySet<USER>(new Action<USER>(this.attach_USERs), new Action<USER>(this.detach_USERs));
		this._ROLES_PAGEs = new EntitySet<ROLES_PAGE>(new Action<ROLES_PAGE>(this.attach_ROLES_PAGEs), new Action<ROLES_PAGE>(this.detach_ROLES_PAGEs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ROLE_ID
	{
		get
		{
			return this._ROLE_ID;
		}
		set
		{
			if ((this._ROLE_ID != value))
			{
				this.OnROLE_IDChanging(value);
				this.SendPropertyChanging();
				this._ROLE_ID = value;
				this.SendPropertyChanged("ROLE_ID");
				this.OnROLE_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPTION", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string DESCRIPTION
	{
		get
		{
			return this._DESCRIPTION;
		}
		set
		{
			if ((this._DESCRIPTION != value))
			{
				this.OnDESCRIPTIONChanging(value);
				this.SendPropertyChanging();
				this._DESCRIPTION = value;
				this.SendPropertyChanged("DESCRIPTION");
				this.OnDESCRIPTIONChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE_MISSION", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string ROLE_MISSION
	{
		get
		{
			return this._ROLE_MISSION;
		}
		set
		{
			if ((this._ROLE_MISSION != value))
			{
				this.OnROLE_MISSIONChanging(value);
				this.SendPropertyChanging();
				this._ROLE_MISSION = value;
				this.SendPropertyChanged("ROLE_MISSION");
				this.OnROLE_MISSIONChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ROLE_USER", Storage="_USERs", ThisKey="ROLE_ID", OtherKey="ROLE_ID")]
	public EntitySet<USER> USERs
	{
		get
		{
			return this._USERs;
		}
		set
		{
			this._USERs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ROLE_ROLES_PAGE", Storage="_ROLES_PAGEs", ThisKey="ROLE_ID", OtherKey="ROLE_ID")]
	public EntitySet<ROLES_PAGE> ROLES_PAGEs
	{
		get
		{
			return this._ROLES_PAGEs;
		}
		set
		{
			this._ROLES_PAGEs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_USERs(USER entity)
	{
		this.SendPropertyChanging();
		entity.ROLE = this;
	}
	
	private void detach_USERs(USER entity)
	{
		this.SendPropertyChanging();
		entity.ROLE = null;
	}
	
	private void attach_ROLES_PAGEs(ROLES_PAGE entity)
	{
		this.SendPropertyChanging();
		entity.ROLE = this;
	}
	
	private void detach_ROLES_PAGEs(ROLES_PAGE entity)
	{
		this.SendPropertyChanging();
		entity.ROLE = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ROLES_PAGES")]
public partial class ROLES_PAGE : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ROLE_ID;
	
	private int _PAGE_ID;
	
	private EntityRef<PAGE> _PAGE;
	
	private EntityRef<ROLE> _ROLE;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnROLE_IDChanging(int value);
    partial void OnROLE_IDChanged();
    partial void OnPAGE_IDChanging(int value);
    partial void OnPAGE_IDChanged();
    #endregion
	
	public ROLES_PAGE()
	{
		this._PAGE = default(EntityRef<PAGE>);
		this._ROLE = default(EntityRef<ROLE>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROLE_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ROLE_ID
	{
		get
		{
			return this._ROLE_ID;
		}
		set
		{
			if ((this._ROLE_ID != value))
			{
				if (this._ROLE.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnROLE_IDChanging(value);
				this.SendPropertyChanging();
				this._ROLE_ID = value;
				this.SendPropertyChanged("ROLE_ID");
				this.OnROLE_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAGE_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int PAGE_ID
	{
		get
		{
			return this._PAGE_ID;
		}
		set
		{
			if ((this._PAGE_ID != value))
			{
				if (this._PAGE.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPAGE_IDChanging(value);
				this.SendPropertyChanging();
				this._PAGE_ID = value;
				this.SendPropertyChanged("PAGE_ID");
				this.OnPAGE_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PAGE_ROLES_PAGE", Storage="_PAGE", ThisKey="PAGE_ID", OtherKey="PAGE_ID", IsForeignKey=true)]
	public PAGE PAGE
	{
		get
		{
			return this._PAGE.Entity;
		}
		set
		{
			PAGE previousValue = this._PAGE.Entity;
			if (((previousValue != value) 
						|| (this._PAGE.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._PAGE.Entity = null;
					previousValue.ROLES_PAGEs.Remove(this);
				}
				this._PAGE.Entity = value;
				if ((value != null))
				{
					value.ROLES_PAGEs.Add(this);
					this._PAGE_ID = value.PAGE_ID;
				}
				else
				{
					this._PAGE_ID = default(int);
				}
				this.SendPropertyChanged("PAGE");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ROLE_ROLES_PAGE", Storage="_ROLE", ThisKey="ROLE_ID", OtherKey="ROLE_ID", IsForeignKey=true)]
	public ROLE ROLE
	{
		get
		{
			return this._ROLE.Entity;
		}
		set
		{
			ROLE previousValue = this._ROLE.Entity;
			if (((previousValue != value) 
						|| (this._ROLE.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._ROLE.Entity = null;
					previousValue.ROLES_PAGEs.Remove(this);
				}
				this._ROLE.Entity = value;
				if ((value != null))
				{
					value.ROLES_PAGEs.Add(this);
					this._ROLE_ID = value.ROLE_ID;
				}
				else
				{
					this._ROLE_ID = default(int);
				}
				this.SendPropertyChanged("ROLE");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ENABLED_ADVERTISMENTS")]
public partial class ENABLED_ADVERTISMENT
{
	
	private int _ADVERTISMENT_ID;
	
	private int _ADVERTISMENT_TYPE_ID;
	
	private int _MARKER_ID;
	
	private string _ADS_CONTENT;
	
	private System.DateTime _INITIALIZE_DATE;
	
	private System.DateTime _EXPIRE_DATE;
	
	private int _IS_PROMOTED;
	
	private int _IS_APPROVE_PROMOT;
	
	private string _ADS_TYPE;
	
	private string _GENERS;
	
	private string _MARKER_NAME;
	
	private int _VISITS_COUNTER;
	
	public ENABLED_ADVERTISMENT()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADVERTISMENT_ID", DbType="Int NOT NULL")]
	public int ADVERTISMENT_ID
	{
		get
		{
			return this._ADVERTISMENT_ID;
		}
		set
		{
			if ((this._ADVERTISMENT_ID != value))
			{
				this._ADVERTISMENT_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADVERTISMENT_TYPE_ID", DbType="Int NOT NULL")]
	public int ADVERTISMENT_TYPE_ID
	{
		get
		{
			return this._ADVERTISMENT_TYPE_ID;
		}
		set
		{
			if ((this._ADVERTISMENT_TYPE_ID != value))
			{
				this._ADVERTISMENT_TYPE_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MARKER_ID", DbType="Int NOT NULL")]
	public int MARKER_ID
	{
		get
		{
			return this._MARKER_ID;
		}
		set
		{
			if ((this._MARKER_ID != value))
			{
				this._MARKER_ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADS_CONTENT", DbType="NVarChar(750) NOT NULL", CanBeNull=false)]
	public string ADS_CONTENT
	{
		get
		{
			return this._ADS_CONTENT;
		}
		set
		{
			if ((this._ADS_CONTENT != value))
			{
				this._ADS_CONTENT = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INITIALIZE_DATE", DbType="Date NOT NULL")]
	public System.DateTime INITIALIZE_DATE
	{
		get
		{
			return this._INITIALIZE_DATE;
		}
		set
		{
			if ((this._INITIALIZE_DATE != value))
			{
				this._INITIALIZE_DATE = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXPIRE_DATE", DbType="Date NOT NULL")]
	public System.DateTime EXPIRE_DATE
	{
		get
		{
			return this._EXPIRE_DATE;
		}
		set
		{
			if ((this._EXPIRE_DATE != value))
			{
				this._EXPIRE_DATE = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_PROMOTED", DbType="Int NOT NULL")]
	public int IS_PROMOTED
	{
		get
		{
			return this._IS_PROMOTED;
		}
		set
		{
			if ((this._IS_PROMOTED != value))
			{
				this._IS_PROMOTED = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_APPROVE_PROMOT", DbType="Int NOT NULL")]
	public int IS_APPROVE_PROMOT
	{
		get
		{
			return this._IS_APPROVE_PROMOT;
		}
		set
		{
			if ((this._IS_APPROVE_PROMOT != value))
			{
				this._IS_APPROVE_PROMOT = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADS_TYPE", DbType="NVarChar(750) NOT NULL", CanBeNull=false)]
	public string ADS_TYPE
	{
		get
		{
			return this._ADS_TYPE;
		}
		set
		{
			if ((this._ADS_TYPE != value))
			{
				this._ADS_TYPE = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GENERS", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string GENERS
	{
		get
		{
			return this._GENERS;
		}
		set
		{
			if ((this._GENERS != value))
			{
				this._GENERS = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MARKER_NAME", DbType="NVarChar(75) NOT NULL", CanBeNull=false)]
	public string MARKER_NAME
	{
		get
		{
			return this._MARKER_NAME;
		}
		set
		{
			if ((this._MARKER_NAME != value))
			{
				this._MARKER_NAME = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VISITS_COUNTER", DbType="Int NOT NULL")]
	public int VISITS_COUNTER
	{
		get
		{
			return this._VISITS_COUNTER;
		}
		set
		{
			if ((this._VISITS_COUNTER != value))
			{
				this._VISITS_COUNTER = value;
			}
		}
	}
}
#pragma warning restore 1591
